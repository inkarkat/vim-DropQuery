*DropQuery.txt*         Ask the user how a :drop'ped file be opened.

			 DROPQUERY    by Ingo Karkat
							       *DropQuery.vim*
description			|DropQuery-description|
usage				|DropQuery-usage|
installation			|DropQuery-installation|
configuration			|DropQuery-configuration|
integration			|DropQuery-integration|
limitations			|DropQuery-limitations|
known problems			|DropQuery-known-problems|
todo				|DropQuery-todo|
history				|DropQuery-history|

==============================================================================
DESCRIPTION					       *DropQuery-description*

This plugin ...

HOW IT WORKS								     *

SOURCE									     *
(Original Vim tip, Stack Overflow answer, ...)

SEE ALSO								     *
(Plugins offering complementary functionality, or plugins using this library.)

RELATED WORKS								     *

- tcmdbar.vim (vimscript #1779) is a script for use with Total Commander's
  button bar by Andy Wokula

==============================================================================
USAGE							     *DropQuery-usage*
								       *:Drop*
:Drop[!] [++opt] [+cmd] {file} ...
			Automatically locate the visible {file}, use an empty
			window for it, or ask where to open {file}. With [!],
			always ask.
:{range}Drop[!] [++opt] [+cmd] [{glob} ...]
			Treat each line in {range} (stripped of leading and
			trailing whitespace) as a filespec / glob and ask
			where to open those. {glob} can be used to optionally
			filter the list.
:Drop[!] [++opt] [+cmd] {reg}
			Treat each line in {reg} (stripped of leading and
			trailing whitespace) as a filespec / glob and ask
			where to open those.

:[N]BufDrop[!] [N]	Automatically locate the visible buffer [N] / for
:BufDrop[!] {bufname}	{bufname}, use an empty window for it, or ask where to
			open it. With [!], or when the current buffer is
			specified, always ask.

==============================================================================
INSTALLATION					      *DropQuery-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim DropQuery*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES					      *DropQuery-dependencies*

- Requires Vim 7.0 or higher.
- Requires the |ingo-library.vim| plugin (vimscript #4433), version 1.039 or
  higher.

==============================================================================
CONFIGURATION					     *DropQuery-configuration*

For a permanent configuration, put the following commands into your |vimrc|:
						       *g:DropQuery_RemapDrop*
By default, the plugins remaps the built-in |:drop| command to use |:Drop|
instead. With this option, other integrations (e.g. VisVim) need not be
modified to use the DropQuery functionality. To turn this off, use: >
    let g:DropQuery_RemapDrop = 0
<							 *g:DropQuery_NoPopup*
The plugin uses a pop-up dialog in GVIM for the query. To use a textual query
(as is done in the console Vim) instead, use: >
    let g:DropQuery_NoPopup = 'default value'
This does not cover the :confirm query "Save changes to...?" when abandoning
modified buffers.
					      *g:DropQuery_MoveAwayPredicates*
To exempt certain windows from being targets for direct dropping, and move
away from them before querying for a drop action, you can define predicate
expressions or Funcrefs to characterize such windows in the following List: >
    let g:DropQuery_MoveAwayPredicates = ["&filetype == 'scratch'"]
<
			*g:DropQuery_FilespecProcessor*
If you want to process individual filespecs passed to |:Drop|, you can hook in
a processor function that takes a single filespec (or file glob), and returns
this changed or unchanged: >
    function! MyFilespecProcessor( filespec )
	" Create virtual X drive mapping to C:\Windows.
	return substitute(a:filespec, '^X:', 'C:\Windows', '')
    endfunction
    let g:DropQuery_FilespecProcessor = function('MyFilespecProcessor')
<
==============================================================================
INTEGRATION					       *DropQuery-integration*

==============================================================================
LIMITATIONS					       *DropQuery-limitations*

KNOWN PROBLEMS					    *DropQuery-known-problems*

TODO							      *DropQuery-todo*

IDEAS							     *DropQuery-ideas*

==============================================================================
HISTORY							   *DropQuery-history*

GOAL
First published version.

0.01	23-May-2005
Started development.

==============================================================================
Copyright: (C) 2005-2019 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
